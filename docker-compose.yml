version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: rc-zoho-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres 
      POSTGRES_DB: rc_zoho
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7
    container_name: rc-zoho-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rc-zoho-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/rc_zoho
      REDIS_URL: redis://redis:6379/0
      API_PORT: 8000
      DEBUG: "true"
      SECRET_KEY: ${SECRET_KEY:-changemeinthisismydevsecretkey}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-changemeinthisismydevencryptionkey}
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    container_name: rc-zoho-celery-worker
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/rc_zoho
      REDIS_URL: redis://redis:6379/0
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-changemeinthisismydevencryptionkey}
    command: celery -A celery_worker worker --loglevel=info

  # Celery Beat Scheduler
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile.celerybeat
    container_name: rc-zoho-celery-beat
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/rc_zoho
      REDIS_URL: redis://redis:6379/0
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-changemeinthisismydevencryptionkey}
    command: celery -A celery_worker beat --loglevel=info

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rc-zoho-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:8000
    ports:
      - "3000:3000"

volumes:
  postgres_data: 